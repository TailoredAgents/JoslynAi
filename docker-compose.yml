version: "3.9"
services:
  minio:
    image: minio/minio:RELEASE.2024-10-02T17-50-41Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./docker-data/minio:/data

  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: joslyn_ai
    ports:
      - "5432:5432"
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 12

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/joslyn_ai
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: joslyn-ai
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_FROM: no-reply@joslyn-ai.local
      ADMIN_API_KEY: dev-admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      INTERNAL_API_KEY: dev-internal
      CLAMAV_HOST: clamav
      CLAMAV_PORT: 3310
      CLAMAV_FAIL_CLOSED: "0"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      clamav:
        condition: service_started
    ports:
      - "8080:8080"

  web:
    build:
      context: .
      dockerfile: infra/docker/web.Dockerfile
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_BASE_URL: /api/joslyn
      JOSLYN_API_ORIGIN: http://api:8080
    depends_on:
      api:
        condition: service_started
    ports:
      - "3000:3000"

  worker:
    build:
      context: .
      dockerfile: infra/docker/worker.Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/joslyn_ai
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: joslyn-ai
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      INTERNAL_API_KEY: dev-internal
      API_URL: http://api:8080
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      api:
        condition: service_started

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  clamav:
    image: clamav/clamav:stable
    ports:
      - "3310:3310"
    healthcheck:
      test: ["CMD-SHELL", "clamdscan --version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
volumes:
  postgres:
